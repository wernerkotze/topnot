'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

require('../../../src/stylus/components/_selection-controls.styl');

require('../../../src/stylus/components/_switch.styl');

var _selectable = require('../../mixins/selectable');

var _selectable2 = _interopRequireDefault(_selectable);

var _touch = require('../../directives/touch');

var _touch2 = _interopRequireDefault(_touch);

var _helpers = require('../../util/helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* @vue/component */

// Directives
exports.default = {
    name: 'v-switch',
    directives: { Touch: _touch2.default },
    mixins: [_selectable2.default],
    computed: {
        classes: function classes() {
            return {
                'v-input--selection-controls v-input--switch': true
            };
        }
    },
    methods: {
        genDefaultSlot: function genDefaultSlot() {
            return [this.genSwitch(), this.genLabel()];
        },
        genSwitch: function genSwitch() {
            return this.$createElement('div', {
                staticClass: 'v-input--selection-controls__input'
            }, [this.genInput('checkbox', this.$attrs), !this.disabled && this.genRipple(this.setTextColor(this.computedColor, {
                directives: [{
                    name: 'touch',
                    value: {
                        left: this.onSwipeLeft,
                        right: this.onSwipeRight
                    }
                }]
            })), this.genSwitchPart('track'), this.genSwitchPart('thumb')]);
        },

        // Switches have default colors for thumb/track
        // that do not tie into theme colors
        // this avoids a visual issue where
        // the color takes too long to transition
        genSwitchPart: function genSwitchPart(target) {
            return this.$createElement('div', this.setTextColor(this.computedColor, {
                staticClass: 'v-input--switch__' + target,
                'class': this.themeClasses,
                // Avoid cache collision
                key: target
            }));
        },
        onSwipeLeft: function onSwipeLeft() {
            if (this.isActive) this.onChange();
        },
        onSwipeRight: function onSwipeRight() {
            if (!this.isActive) this.onChange();
        },
        onKeydown: function onKeydown(e) {
            if (e.keyCode === _helpers.keyCodes.left && this.isActive || e.keyCode === _helpers.keyCodes.right && !this.isActive) this.onChange();
        }
    }
};
// Helpers

// Mixins
//# sourceMappingURL=VSwitch.js.map