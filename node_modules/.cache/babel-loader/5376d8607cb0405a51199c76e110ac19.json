{"remainingRequest":"/Users/werner-dev/www/topnot-cli/node_modules/babel-loader/lib/index.js!/Users/werner-dev/www/topnot-cli/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/werner-dev/www/topnot-cli/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/werner-dev/www/topnot-cli/src/components/profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/werner-dev/www/topnot-cli/src/components/profile.vue","mtime":1556448255029},{"path":"/Users/werner-dev/www/topnot-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/werner-dev/www/topnot-cli/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/werner-dev/www/topnot-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/werner-dev/www/topnot-cli/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/werner-dev/www/topnot-cli/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport navbar from '@/components/navbar.vue';\nimport { mapGetters } from 'vuex';\nvar service; //google stuff\n\nvar map; //google stuff\n\nvar infowindow; //google stuff\n\nvar addrOG = ''; //Array of company addresses\n\nvar shoppingItems; //All the places returned by google nearby search\n\nvar companyNameOG = []; //Array of company names\n\nvar radius = 2000; //Dummy value that is populayed by all the places returned by nearby seqarch\n\nvar shoppingItemsOG = [{\n  name: 'Chop Shop',\n  lat: '10',\n  long: '10',\n  companyAddr: 'address',\n  hours: 'open'\n}];\n/*\ncallback\nresults : places returned from google API\nIt populates the shoppingItemsOG with the places returned by nearby search\n*/\n\nfunction callback(results, status) {\n  if (status == google.maps.places.PlacesServiceStatus.OK) {\n    shoppingItemsOG.length = 0;\n    companyNameOG.length = 0;\n\n    for (var i = 0; i < results.length; i++) {\n      var place = results[i];\n      companyNameOG.push(place.name);\n      shoppingItemsOG.push({\n        name: place.name,\n        lat: place.geometry.location.lat(),\n        long: place.geometry.location.lng(),\n        companyAddr: place.vicinity,\n        hours: place.opening_hours\n      });\n    }\n  }\n}\n\nexport default {\n  components: {\n    navbar: navbar\n  },\n  data: function data() {\n    return {\n      companyName: '',\n      mapName: this.name + \"-map\",\n      dialog: false,\n      hashtags: ['Programming'],\n      firstname: '',\n      lastname: '',\n      bio: '',\n      age: '',\n      imageUrl: 'g',\n      long: '',\n      lat: '',\n      address: '',\n      companyAddr: addrOG,\n      shoppingItems: companyNameOG\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['user', 'error', 'loading'])),\n  methods: {\n    onCreateHairdresser: function onCreateHairdresser() {\n      var hairdresserData = {\n        firstname: this.firstname,\n        lastname: this.lastname,\n        bio: this.bio,\n        age: this.age,\n        imageUrl: this.imageUrl,\n        companyName: this.companyName,\n        companyAddr: addrOG,\n        companyLat: this.lat,\n        companyLong: this.long,\n        hashtags: this.hashtags\n      };\n      this.$store.dispatch('createHairdresserProfile', hairdresserData);\n      this.$router.push('/dashboard');\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.autocomplete = new google.maps.places.Autocomplete(this.$refs.autocomplete, {\n      types: ['geocode']\n    });\n    this.autocomplete.addListener('place_changed', function () {\n      var place = _this.autocomplete.getPlace(); //place selected\n\n\n      var ac = place.address_components;\n      var address = ' '; //The address of the selected location is formatted into a more\n      // readable format\n\n      if (place.address_components) {\n        address = [place.address_components[0] && place.address_components[0].long_name || '', place.address_components[1] && place.address_components[1].short_name || '', place.address_components[2] && place.address_components[2].short_name || ''].join(' ');\n      }\n\n      addrOG = address;\n      _this.lat = place.geometry.location.lat();\n      _this.long = place.geometry.location.lng(); // this.markerCoordinates.latitude = this.lat;\n      // this.markerCoordinates.longitude = this.long;\n\n      _this.address = address;\n      var latLong = new google.maps.LatLng(_this.lat, _this.long);\n      var element = document.getElementById(_this.mapName);\n      var options = {\n        zoom: 14,\n        center: latLong //map is created\n\n      };\n      map = new google.maps.Map(element, options); //request used to search for all nearby hairdresser\n\n      var request = {\n        location: latLong,\n        radius: 5000,\n        type: ['hair_care']\n      };\n      infowindow = new google.maps.InfoWindow();\n      service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(request, callback); //request made to API\n    });\n  },\n  watch: {\n    user: function user(value) {\n      if (value !== null && value !== undefined) {\n        this.$router.push('profile-new');\n      }\n    }\n  }\n};",{"version":3,"sources":["profile.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <navbar/>\n    <v-content>\n      <v-container fluid fill-height>\n        <v-layout>\n          <v-flex xs12 sm6 offset-sm3>\n            <material-card class=\"v-card-profile\">\n              <v-avatar\n                slot=\"offset\"\n                class=\"mx-auto d-block\"\n                size=\"130\"\n              >\n                <img\n                  src=\"https://www.wired.com/images_blogs/wiredscience/2012/10/ff_musk4_f.jpg\"\n                >\n              </v-avatar>\n              <v-card-text class=\"text-xs-center\">\n                <h6 class=\"category text-gray font-weight-thin mb-3\">CEO / CO-FOUNDER</h6>\n                <h4 class=\"card-title font-weight-light\">Elon Musk</h4>\n                <p class=\"card-description font-weight-light\">Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens’ bed design but the back is...</p>\n              </v-card-text>\n              <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n                <v-btn slot=\"activator\" outline small fab color=\"indigo\">\n                  <v-icon>edit</v-icon>\n                </v-btn>\n               <v-card>\n                <v-form ref=\"form\" @submit.prevent=\"onCreateHairdresser\">\n                   <v-card-title>\n                     <span class=\"headline\">User Profile</span>\n                   </v-card-title>\n                   <v-card-text>\n                     <v-container grid-list-md>\n                       <v-layout wrap>\n                         <v-flex xs12 sm6 md4>\n                           <v-text-field \n                              name=\"firstname\"\n                              label=\"First name\"\n                              v-model=\"firstname\"\n                              id=\"firstname\"\n                              color=\"purple darken-2\"\n                              required \n                            ></v-text-field>\n                         </v-flex>\n                         <v-flex xs12 sm6>\n                            <v-text-field\n                               name=\"lastname\"\n                               label=\"Last name\"\n                               v-model=\"lastname\"\n                               color=\"blue darken-2\"\n                               required\n                             ></v-text-field>\n                          </v-flex>\n                         <v-flex xs12 sm6 md6>\n                           <v-textarea\n                               v-model=\"bio\"\n                               color=\"teal\"\n                             >\n                              <div slot=\"label\">\n                                 Bio\n                                <small>(optional)</small>\n                              </div>\n                            </v-textarea>\n                         </v-flex>\n                         <v-flex xs12>\n                            <div>\n                              <v-label>Business Address</v-label>\n                              <input\n                                  v-model=\"address\"\n                                  ref=\"autocomplete\"\n                                  class=\"search-location\"\n                                  onfocus=\"value = ''\"\n                                  type=\"text\"\n                                  label = 'address'\n                                  />\n                            </div>\n                          </v-flex>\n                          <v-flex xs12>\n                            <v-label>Company</v-label>\n                             <v-autocomplete\n                               v-model=\"companyName\"\n                               :items=\"shoppingItems\"\n                               prepend-icon=\"mdi-city\"\n                             >\n                               <v-slide-x-reverse-transition\n                                 slot=\"append-outer\"\n                                 mode=\"out-in\"\n                               >\n                             </v-slide-x-reverse-transition>\n                           </v-autocomplete>\n                          </v-flex>\n                         <v-flex xs12 sm6>\n                           <v-select\n                             :items=\"['0-17', '18-29', '30-54', '54+']\"\n                             v-model=\"age\"\n                             label=\"Age*\"\n                             required\n                           ></v-select>\n                         </v-flex>\n                         <v-flex xs12 sm6>\n                           <v-autocomplete\n                             :items=\"['Skiing', 'Ice hockey', 'Soccer', 'Basketball', 'Hockey', 'Reading', 'Writing', 'Coding', 'Basejump']\"\n                             label=\"Interests\"\n                             v-model=\"hashtags\"\n                             multiple\n                           ></v-autocomplete>\n                         </v-flex>\n                       </v-layout>\n                     </v-container>\n                     <small>*indicates required field</small>\n                   </v-card-text>\n                   <v-card-actions>\n                     <v-spacer></v-spacer>\n                     <v-btn color=\"blue darken-1\" flat @click=\"dialog = false\">Close</v-btn>\n                     <v-btn color=\"blue darken-1\" flat @click=\"dialog = false\" type=\"submit\">Save</v-btn>\n                   </v-card-actions>\n                 </v-form>\n               </v-card>\n             </v-dialog>\n            </material-card>\n          </v-flex>\n       </v-layout>\n      </v-container>\n      <div class=\"google-map\" :id=\"mapName\" hidden></div>\n    </v-content>\n    <v-footer color=\"indigo\" app>\n    </v-footer>\n  </v-app>\n</template>\n\n<script>\n\n    import navbar from '@/components/navbar.vue'\n    import { mapGetters } from 'vuex'\n\n    var service;//google stuff\n    var map;//google stuff\n    var infowindow;//google stuff\n    var addrOG = '';//Array of company addresses\n    var shoppingItems;//All the places returned by google nearby search\n    var companyNameOG = [];//Array of company names\n    var radius = 2000;\n\n    //Dummy value that is populayed by all the places returned by nearby seqarch\n    var shoppingItemsOG= [{\n        name: 'Chop Shop',\n        lat: '10',\n        long: '10',\n        companyAddr : 'address',\n        hours : 'open'\n    }];\n\n    /*\n    callback\n    results : places returned from google API\n    It populates the shoppingItemsOG with the places returned by nearby search\n    */\n    function callback(results, status) {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        shoppingItemsOG.length = 0;\n        companyNameOG.length = 0;\n        for (var i = 0; i < results.length; i++) {\n          var place = results[i];\n          companyNameOG.push(place.name);\n          shoppingItemsOG.push({\n            name: place.name,\n            lat: place.geometry.location.lat(),\n            long: place.geometry.location.lng(),\n            companyAddr:place.vicinity,\n            hours : place.opening_hours\n          });\n        }\n      }\n    }\n\nexport default {\n\n    components: {\n      navbar\n    },\n\n    data () {\n      return {\n        companyName : '',\n        mapName: this.name + \"-map\",\n        dialog: false,\n        hashtags: [\n          'Programming'\n        ],\n        firstname: '',\n        lastname: '',\n        bio: '',\n        age: '',\n        imageUrl: 'g',\n        long: '',\n        lat: '',\n        address:'',\n        companyAddr:addrOG,\n        shoppingItems: companyNameOG\n      }\n    },\n\n    computed: {\n      ...mapGetters([\n        'user',\n        'error',\n        'loading'\n      ])\n    },\n\n    methods: {\n      onCreateHairdresser () {\n        const hairdresserData = {\n          firstname: this.firstname,\n          lastname: this.lastname,\n          bio: this.bio,\n          age: this.age,\n          imageUrl: this.imageUrl,\n          companyName:this.companyName,\n          companyAddr:addrOG,\n          companyLat : this.lat,\n          companyLong: this.long,\n          hashtags : this.hashtags\n        }\n        this.$store.dispatch('createHairdresserProfile', hairdresserData)\n        this.$router.push('/dashboard')\n      }\n    },\n\n    mounted: function() {\n      this.autocomplete = new google.maps.places.Autocomplete(\n          (this.$refs.autocomplete), {\n              types: ['geocode']\n          }\n      );\n      this.autocomplete.addListener('place_changed', () => {\n          let place = this.autocomplete.getPlace();//place selected\n          let ac = place.address_components;\n          var address = ' ';\n\n          //The address of the selected location is formatted into a more\n          // readable format\n          if (place.address_components) {\n              address = [\n                  (place.address_components[0] && place.address_components[0].long_name || ''),\n                  (place.address_components[1] && place.address_components[1].short_name || ''),\n                  (place.address_components[2] && place.address_components[2].short_name || '')\n              ].join(' ');\n          }\n\n          addrOG = address;\n          this.lat = place.geometry.location.lat();\n          this.long = place.geometry.location.lng();\n          // this.markerCoordinates.latitude = this.lat;\n          // this.markerCoordinates.longitude = this.long;\n          this.address = address;\n          var latLong =  new google.maps.LatLng(this.lat,this.long);\n          const element = document.getElementById(this.mapName)\n          const options = {\n              zoom: 14,\n              center: latLong\n          }\n          //map is created\n          map = new google.maps.Map(element, options);\n          //request used to search for all nearby hairdresser\n          var request = {\n           location: latLong,\n           radius: 5000,\n           type: ['hair_care']\n         };\n\n         infowindow = new google.maps.InfoWindow();\n         service = new google.maps.places.PlacesService(map);\n         service.nearbySearch(request, callback);//request made to API\n      });\n    },\n\n    watch: {\n\n      user (value) {\n        if (value !== null && value !== undefined) {\n          this.$router.push('profile-new')\n        }\n      }\n\n    }\n\n  };\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.search-location {\n    display: block;\n    width: 60vw;\n    margin: 15px !important;\n    margin-top: 5vw;\n    font-size: 14px;\n    font-weight: 400;\n    outline: none;\n    height: 30px;\n    line-height: 30px;\n    text-align: left !important;\n    border-radius: 10px;\n}\n\nh1 {\n  text-align: center;\n}\n</style>\n"],"sourceRoot":"src/components"}]}