{"remainingRequest":"/Users/werner-dev/www/frontend/node_modules/babel-loader/lib/index.js!/Users/werner-dev/www/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/werner-dev/www/frontend/src/store/services/users.js","dependencies":[{"path":"/Users/werner-dev/www/frontend/src/store/services/users.js","mtime":1555224202125},{"path":"/Users/werner-dev/www/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1555006869626},{"path":"/Users/werner-dev/www/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/werner-dev/www/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/werner-dev/www/frontend/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.sort\";\nimport axios from 'axios';\nimport * as firebase from 'firebase';\nvar state = {\n  loadedHairdressers: [{\n    firstname: 'Rabbo',\n    lastname: 'Pasch',\n    bio: 'weaht ',\n    company: 'My Own Companyy',\n    imageUrl: 'my image',\n    age: null,\n    companyName: 'My Own companyName',\n    companyAddr: 'My Own companyAddr',\n    companyLat: 'My Own companyLat',\n    companyLong: 'My Own companyLong',\n    hashtags: 'My Own hashTags'\n  }]\n},\n    getters = {\n  loadedHairdressers: function loadedHairdressers(state) {\n    return state.loadedHairdressers.sort(function (hairDressersA, hairDressersB) {\n      return hairDressersA.date > hairDressersB.date;\n    });\n  },\n  featuredHairdressers: function featuredHairdressers(state, getters) {\n    return getters.loadedHairdressers.slice(0, 11);\n  },\n  loadedHairdresser: function loadedHairdresser(state) {\n    return function (hairdesserId) {\n      return state.loadedHairdressers.find(function (hairdesser) {\n        return hairdesser.id === hairdesserId;\n      });\n    };\n  }\n},\n    mutations = {\n  setLoadedHairdressers: function setLoadedHairdressers(state, payload) {\n    state.loadedHairdressers = payload;\n  },\n  createHairdresser: function createHairdresser(state, payload) {\n    state.loadedHairdressers.push(payload);\n  },\n  updateHairdresser: function updateHairdresser(state, payload) {\n    var hairdesser = state.loadedHairdressers.find(function (hairdesser) {\n      return hairdesser.id === payload.id;\n    });\n\n    if (payload.firstname) {\n      hairdesser.firstname = payload.firstname;\n    }\n\n    if (payload.lastname) {\n      hairdesser.lastname = payload.lastname;\n    }\n\n    if (payload.companyAddr) {\n      hairdesser.companyAddr = payload.companyAddr;\n    }\n  }\n},\n    actions = {\n  loadHairdressers: function loadHairdressers(_ref) {\n    var commit = _ref.commit;\n    commit('setLoading', true);\n    firebase.database().ref('hairdressers').once('value').then(function (data) {\n      var hairdresser = [];\n      var obj = data.val();\n\n      for (var key in obj) {\n        hairdresser.push({\n          id: key,\n          age: obj[key].age,\n          firstname: obj[key].firstname,\n          lastname: obj[key].lastname,\n          bio: obj[key].bio,\n          imageUrl: obj[key].imageUrl,\n          date: obj[key].date,\n          creatorId: obj[key].creatorId,\n          companyName: obj[key].companyName,\n          companyAddr: obj[key].companyAddr,\n          companyLat: obj[key].companyLat,\n          companyLong: obj[key].companyLong,\n          hashtags: obj[key].hashtags\n        });\n      }\n\n      commit('setLoadedHairdressers', hairdresser);\n      commit('setLoading', false);\n    }).catch(function (error) {\n      console.log(error);\n      commit('setLoading', false);\n    });\n  },\n  createHairdresserProfile: function createHairdresserProfile(_ref2, payload) {\n    var commit = _ref2.commit,\n        getters = _ref2.getters;\n    var hairdesser = {\n      firstname: payload.firstname,\n      lastname: payload.lastname,\n      imageUrl: payload.imageUrl,\n      bio: payload.bio,\n      age: payload.age,\n      creatorId: getters.user.id,\n      companyName: payload.companyName,\n      companyAddr: payload.companyAddr,\n      companyLat: payload.companyLat,\n      companyLong: payload.companyLong,\n      hashtags: payload.hashtags\n    };\n    firebase.database().ref('hairdressers').push(hairdesser).then(function (data) {\n      var key = data.key;\n      commit('createHairdresser', _objectSpread({}, hairdesser, {\n        id: key\n      }));\n    }).catch(function (error) {\n      console.log(error);\n    }); // Reach out to firebase and store it\n  },\n  updateHairdresserData: function updateHairdresserData(_ref3, payload) {\n    var commit = _ref3.commit;\n    commit('setLoading', true);\n    var updateObj = {};\n\n    if (payload.firstname) {\n      updateObj.firstname = payload.firstname;\n    }\n\n    if (payload.lastname) {\n      updateObj.lastname = payload.lastname;\n    }\n\n    if (payload.companyAddr) {\n      updateObj.companyAddr = payload.companyAddr;\n    }\n\n    firebase.database().ref('hairdessers').child(payload.id).update(updateObj).then(function () {\n      commit('setLoading', false);\n      commit('updateHairdresser', payload);\n    }).catch(function (error) {\n      console.log(error);\n      commit('setLoading', false);\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/werner-dev/www/frontend/src/store/services/users.js"],"names":["axios","firebase","state","loadedHairdressers","firstname","lastname","bio","company","imageUrl","age","companyName","companyAddr","companyLat","companyLong","hashtags","getters","sort","hairDressersA","hairDressersB","date","featuredHairdressers","slice","loadedHairdresser","hairdesserId","find","hairdesser","id","mutations","setLoadedHairdressers","payload","createHairdresser","push","updateHairdresser","actions","loadHairdressers","commit","database","ref","once","then","data","hairdresser","obj","val","key","creatorId","catch","error","console","log","createHairdresserProfile","user","updateHairdresserData","updateObj","child","update"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport * as firebase from 'firebase'\n\nconst state = {\n  loadedHairdressers: [\n    {\n      firstname: 'Rabbo',\n      lastname: 'Pasch',\n      bio: 'weaht ',\n      company: 'My Own Companyy',\n      imageUrl: 'my image',\n      age: null,\n      companyName:'My Own companyName',\n      companyAddr:'My Own companyAddr',\n      companyLat :'My Own companyLat',\n      companyLong :'My Own companyLong',\n      hashtags : 'My Own hashTags',\n    }\n  ]\n},\n\ngetters = {\n    loadedHairdressers (state) {\n      return state.loadedHairdressers.sort((hairDressersA, hairDressersB) => {\n        return hairDressersA.date > hairDressersB.date\n      })\n    },\n    featuredHairdressers (state, getters) {\n      return getters.loadedHairdressers.slice(0, 11)\n    },\n    loadedHairdresser (state) {\n\n      return (hairdesserId) => {\n        return state.loadedHairdressers.find((hairdesser) => {\n          return hairdesser.id === hairdesserId\n        })\n      }\n    }\n},\n\nmutations = {\n  setLoadedHairdressers (state, payload) {\n  state.loadedHairdressers = payload\n  },\n  createHairdresser (state, payload) {\n    state.loadedHairdressers.push(payload)\n  },\n  updateHairdresser (state, payload) {\n    const hairdesser = state.loadedHairdressers.find(hairdesser => {\n      return hairdesser.id === payload.id\n    })\n    if (payload.firstname) {\n      hairdesser.firstname = payload.firstname\n    }\n    if (payload.lastname) {\n      hairdesser.lastname = payload.lastname\n    }\n    if (payload.companyAddr) {\n      hairdesser.companyAddr = payload.companyAddr\n    }\n  }\n},\n\nactions = {\n    loadHairdressers ({commit}) {\n      commit('setLoading', true)\n      firebase.database().ref('hairdressers').once('value')\n        .then((data) => {\n          const hairdresser = []\n          const obj = data.val()\n          for (let key in obj) {\n            hairdresser.push({\n              id: key,\n              age: obj[key].age,\n              firstname: obj[key].firstname,\n              lastname: obj[key].lastname,\n              bio: obj[key].bio,\n              imageUrl: obj[key].imageUrl,\n              date: obj[key].date,\n              creatorId: obj[key].creatorId,\n              companyName:obj[key].companyName,\n              companyAddr:obj[key].companyAddr,\n              companyLat : obj[key].companyLat,\n              companyLong : obj[key].companyLong,\n              hashtags : obj[key].hashtags,\n            })\n          }\n          commit('setLoadedHairdressers', hairdresser)\n          commit('setLoading', false)\n        })\n        .catch(\n          (error) => {\n            console.log(error)\n            commit('setLoading', false)\n          }\n        )\n    },\n    createHairdresserProfile ({commit, getters}, payload) {\n      const hairdesser = {\n        firstname: payload.firstname,\n        lastname: payload.lastname,\n        imageUrl: payload.imageUrl,\n        bio: payload.bio,\n        age: payload.age,\n        creatorId: getters.user.id,\n        companyName:payload.companyName,\n        companyAddr:payload.companyAddr,\n        companyLat : payload.companyLat,\n        companyLong : payload.companyLong,\n        hashtags : payload.hashtags,\n      }\n\n      firebase.database().ref('hairdressers').push(hairdesser)\n        .then((data) => {\n          const key = data.key\n          commit('createHairdresser', {\n            ...hairdesser,\n            id: key\n          })\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n      // Reach out to firebase and store it\n    },\n    updateHairdresserData ({commit}, payload) {\n      commit('setLoading', true)\n      const updateObj = {}\n      if (payload.firstname) {\n        updateObj.firstname = payload.firstname\n      }\n      if (payload.lastname) {\n        updateObj.lastname = payload.lastname\n      }\n      if (payload.companyAddr) {\n        updateObj.companyAddr = payload.companyAddr\n      }\n      firebase.database().ref('hairdessers').child(payload.id).update(updateObj)\n        .then(() => {\n          commit('setLoading', false)\n          commit('updateHairdresser', payload)\n        })\n        .catch(error => {\n          console.log(error)\n          commit('setLoading', false)\n        })\n    }\n}\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n}\n"]}]}