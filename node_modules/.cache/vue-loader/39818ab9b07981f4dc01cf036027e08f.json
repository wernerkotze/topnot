{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/profile-tester.vue?vue&type=style&index=0&id=fb23841a&lang=scss&scoped=true&","dependencies":[{"path":"/app/src/components/profile-tester.vue","mtime":1555223556000},{"path":"/app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/app/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1555006869000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh1 {\n  text-align: center;\n}\n",{"version":3,"sources":["profile-tester.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqSA;AACA;AACA","file":"profile-tester.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- PROFILE -->\n    <v-app id=\"inspire\">\n        <v-toolbar color=\"indigo\" dark fixed app>\n            <v-toolbar-title>topnot</v-toolbar-title>\n        </v-toolbar>\n        <v-content>\n      <v-parallax\n    height=\"300\"\n    src=\"https://cdn.vuetifyjs.com/images/parallax/material2.jpg\"\n  ></v-parallax>\n\n            <v-layout row justify-center>\n      <v-flex xs6 sm4>\n    <v-img\n    height=\"300\"\n    width = \"300\"\n      src=\"https://cdn.vuetifyjs.com/images/parallax/material2.jpg\"\n    ></v-img>\n  </v-flex>\n                <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n                    <v-btn slot=\"activator\" color=\"primary\" dark>Edit Profile</v-btn>\n                    <v-card>\n                        <v-form ref=\"form\" @submit.prevent=\"onCreateHairdresser\">\n                        <v-card-title>\n                            <span class=\"headline\">User Profile</span>\n                        </v-card-title>\n\n                        <v-card-text>\n                            <v-container grid-list-md>\n\n                                <v-layout wrap>\n                                    <v-flex xs12 sm6>\n                                        <v-text-field\n                       name=\"firstname\"\n                       label=\"First name\"\n                       v-model=\"firstname\"\n                       id=\"firstname\"\n                       color=\"purple darken-2\"\n                       required\n                     ></v-text-field>\n                                    </v-flex>\n                                    <v-flex xs12 sm6>\n                                        <v-text-field\n                       name=\"lastname\"\n                       label=\"Last name\"\n                       v-model=\"lastname\"\n                       color=\"blue darken-2\"\n                       required\n                     ></v-text-field>\n                                    </v-flex>\n\n                                    <v-flex xs12 >\n                                        <v-slider\n                       v-model=\"age\"\n                       color=\"orange\"\n                       label=\"Age\"\n                       hint=\"Be honest\"\n                       min=\"1\"\n                       max=\"100\"\n                       thumb-label\n                     ></v-slider>\n                                    </v-flex>\n                                    <v-flex xs12>\n                                        <div slot=\"label\">\n                       Chips\n                     </div>\n                                        <v-combobox\n                  v-model=\"hashtags\"\n                  :items=\"hashtags\"\n                  label=\"Select your tags\"\n                  multiple\n                  chips\n                ></v-combobox>\n                                    </v-flex>\n                                    <v-flex xs12>\n                                        <v-textarea\n                       v-model=\"bio\"\n                       color=\"teal\"\n                     >\n                                            <div slot=\"label\">\n                         Bio\n                                                <small>(optional)</small>\n                                            </div>\n                                        </v-textarea>\n                                    </v-flex>\n                                    <v-flex xs12>\n                                        <div >\n                      <v-subheader class=\"pa-0\">Business Address</v-subheader>\n\n                                            <input\n                          v-model=\"address\"\n                          ref=\"autocomplete\"\n                          placeholder=\" Enter your location\"\n                          class=\"search-location\"\n                          onfocus=\"value = ''\"\n                          type=\"text\"\n                          label = 'address'\n                          />\n                                        </div>\n                                    </v-flex>\n                                    <v-flex xs12>\n                    <v-subheader class=\"pa-0\">Company</v-subheader>\n                     <v-autocomplete\n                       v-model=\"companyName\"\n                       :items=\"shoppingItems\"\n                       prepend-icon=\"mdi-city\"\n                     >\n                       <v-slide-x-reverse-transition\n                         slot=\"append-outer\"\n                         mode=\"out-in\"\n                       >\n                     </v-slide-x-reverse-transition>\n                   </v-autocomplete>\n                                    </v-flex>\n                                </v-layout>\n                            </v-container>\n                            <small>*indicates required field</small>\n                        </v-card-text>\n                        <v-card-actions>\n                            <v-spacer></v-spacer>\n                            <v-btn color=\"blue darken-1\" flat @click=\"dialog = false\">Change Password</v-btn>\n                            <v-btn color=\"blue darken-1\" flat @click=\"dialog = false\">Close</v-btn>\n                            <v-btn color=\"blue darken-1\" flat @click=\"dialog = false\" type=\"submit\">Save</v-btn>\n                        </v-card-actions>\n                    </v-form>\n\n                    </v-card>\n                </v-dialog>\n            </v-layout>\n            <v-card flat>\n\n            </v-card>\n\n            <div class=\"google-map\" :id=\"mapName\"></div>\n        </v-content>\n        <v-footer color=\"indigo\" app></v-footer>\n    </v-app>\n</template>\n<script>\n  var service;//google stuff\n  var map;//google stuff\n  var infowindow;//google stuff\n    var addrOG = '';//Array of company addresses\n    var shoppingItems;//All the places returned by google nearby search\n  var companyNameOG = [];//Array of company names\n  var radius = 2000;\n    //Dummy value that is populayed by all the places returned by nearby seqarch\n  var shoppingItemsOG= [{\n          name: 'Chop Shop',\n          lat: '10',\n          long: '10',\n          companyAddr : 'address',\n          hours : 'open'\n\n      }];\n\n            /*\n          callback\n          results : places returned from google API\n          It populates the shoppingItemsOG with the places returned by nearby search\n          */\n  function callback(results, status) {\n    if (status == google.maps.places.PlacesServiceStatus.OK) {\n      shoppingItemsOG.length = 0;\n      companyNameOG.length = 0;\n      for (var i = 0; i < results.length; i++) {\n        var place = results[i];\n        companyNameOG.push(place.name);\n        shoppingItemsOG.push({\n            name: place.name,\n            lat: place.geometry.location.lat(),\n            long: place.geometry.location.lng(),\n            companyAddr:place.vicinity,\n            hours : place.opening_hours\n      }\n        )\n      }\n    }\n  }\n\nimport { mapGetters } from 'vuex'\n\nexport default {\n    data () {\n      return {\n        companyName : '',\n        mapName: this.name + \"-map\",\n        dialog: false,\n        hashtags: [\n          'Programming',\n          'Design',\n          'Vue',\n          'Vuetify'\n        ],\n        firstname: '',\n        lastname: '',\n        bio: '',\n        age: '',\n        imageUrl: 'g',\n        long: '',\n        lat: '',\n        address:'',\n                companyAddr:addrOG,\n        shoppingItems: companyNameOG\n      }\n    },\n    methods: {\n      onCreateHairdresser () {\n        const hairdresserData = {\n          firstname: this.firstname,\n          lastname: this.lastname,\n          bio: this.bio,\n          age: this.age,\n          imageUrl: this.imageUrl,\n                    companyName:this.companyName,\n            companyAddr:addrOG,\n                    companyLat : this.lat,\n                    companyLong: this.long,\n                  hashtags : this.hashtags\n        }\n        this.$store.dispatch('createHairdresserProfile', hairdresserData)\n        this.$router.push('/dashboard')\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'user',\n        'error',\n        'loading'\n      ])\n    },\n    mounted: function() {\n\n\n        this.autocomplete = new google.maps.places.Autocomplete(\n            (this.$refs.autocomplete), {\n                types: ['geocode']\n            }\n        );\n        this.autocomplete.addListener('place_changed', () => {\n            let place = this.autocomplete.getPlace();//place selected\n            let ac = place.address_components;\n            var address = ' ';\n\n                        //The address of the selected location is formatted into a more\n                        // readable format\n            if (place.address_components) {\n                address = [\n                    (place.address_components[0] && place.address_components[0].long_name || ''),\n                    (place.address_components[1] && place.address_components[1].short_name || ''),\n                    (place.address_components[2] && place.address_components[2].short_name || '')\n                ].join(' ');\n            }\n\n                        addrOG = address;\n            this.lat = place.geometry.location.lat();\n            this.long = place.geometry.location.lng();\n            // this.markerCoordinates.latitude = this.lat;\n            // this.markerCoordinates.longitude = this.long;\n            this.address = address;\n            var latLong =  new google.maps.LatLng(this.lat,this.long);\n            const element = document.getElementById(this.mapName)\n            const options = {\n                zoom: 14,\n                center: latLong\n            }\n                        //map is created\n            map = new google.maps.Map(element, options);\n                        //request used to search for all nearby hairdresser\n            var request = {\n             location: latLong,\n             radius: 5000,\n             type: ['hair_care']\n           };\n\n           infowindow = new google.maps.InfoWindow();\n           service = new google.maps.places.PlacesService(map);\n           service.nearbySearch(request, callback);//request made to API\n                  });\n\n    },\n    watch: {\n      user (value) {\n        if (value !== null && value !== undefined) {\n          this.$router.push('profile-tester')\n        }\n      }\n    },\n  };\n\n</script>\n<style lang=\"scss\" scoped>\n  h1 {\n    text-align: center;\n  }\n</style>\n"]}]}