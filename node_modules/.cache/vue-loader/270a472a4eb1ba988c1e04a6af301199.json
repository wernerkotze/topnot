{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/navbar.vue","mtime":1554642538000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Utilities\nimport {\n  mapMutations,\n  mapState\n} from 'vuex'\n\nexport default {\n  // data: () => ({\n  //   drawer: null\n  // }),\n  props: {\n    source: String\n  },\n  computed: {\n    menuItems () {\n      let menuItems = [\n        {icon: 'face', title: 'Sign up', link: '/signup'},\n        {icon: 'lock_open', title: 'Sign in', link: '/signin'}\n      ]\n      if (this.userIsAuthenticated) {\n        menuItems = [\n          {icon: 'dashboard', title: 'Home', link: '/dashboard'},\n          {icon: 'question_answer', title: 'FAQ', link: '/'},\n          {icon: 'person', title: 'Profile', link: '/profile'}\n        ]\n      }\n      return menuItems\n    },\n    drawer: {\n      get () {\n        return this.$store.state.sidebar\n      },\n      set (val) {\n        this.$store.commit('sidebar', val)\n      }\n    },\n    userIsAuthenticated () {\n      return this.$store.getters.user !== null && this.$store.getters.user !== undefined\n    }\n  },\n  methods: {\n    //...mapMutations(['setDrawer', 'toggleDrawer']),\n    onLogout () {\n      this.$store.dispatch('logout')\n    }\n  }\n}\n",{"version":3,"sources":["navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"navbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-navigation-drawer\n  id=\"app-drawer\"\n    v-model=\"drawer\"\n    app\n    floating\n    persistent\n    mobile-break-point=\"991\"\n    width=\"260\"\n  >\n  <v-toolbar flat class=\"transparent\">\n     <v-list class=\"pa-0\">\n       <v-list-tile avatar>\n         <v-list-tile-avatar>\n           <img src=\"https://randomuser.me/api/portraits/men/85.jpg\">\n         </v-list-tile-avatar>\n         <v-list-tile-content>\n           <v-list-tile-title>John Leider</v-list-tile-title>\n         </v-list-tile-content>\n       </v-list-tile>\n     </v-list>\n    </v-toolbar>\n    <v-list dense>\n      <v-list-tile\n        v-for=\"item in menuItems\"\n        :key=\"item.title\"\n        :to=\"item.link\">\n        <v-list-tile-action>\n          <v-icon>{{ item.icon }}</v-icon>\n        </v-list-tile-action>\n        <v-list-tile-content>{{ item.title }}</v-list-tile-content>\n      </v-list-tile>\n      <v-list-tile\n        v-if=\"userIsAuthenticated\"\n        @click=\"onLogout\">\n        <v-list-tile-action>\n          <v-icon>exit_to_app</v-icon>\n        </v-list-tile-action>\n        <v-list-tile-content>Logout</v-list-tile-content>\n    </v-list-tile>\n  </v-list>\n  </v-navigation-drawer>\n</template>\n\n<script>\n// Utilities\nimport {\n  mapMutations,\n  mapState\n} from 'vuex'\n\nexport default {\n  // data: () => ({\n  //   drawer: null\n  // }),\n  props: {\n    source: String\n  },\n  computed: {\n    menuItems () {\n      let menuItems = [\n        {icon: 'face', title: 'Sign up', link: '/signup'},\n        {icon: 'lock_open', title: 'Sign in', link: '/signin'}\n      ]\n      if (this.userIsAuthenticated) {\n        menuItems = [\n          {icon: 'dashboard', title: 'Home', link: '/dashboard'},\n          {icon: 'question_answer', title: 'FAQ', link: '/'},\n          {icon: 'person', title: 'Profile', link: '/profile'}\n        ]\n      }\n      return menuItems\n    },\n    drawer: {\n      get () {\n        return this.$store.state.sidebar\n      },\n      set (val) {\n        this.$store.commit('sidebar', val)\n      }\n    },\n    userIsAuthenticated () {\n      return this.$store.getters.user !== null && this.$store.getters.user !== undefined\n    }\n  },\n  methods: {\n    //...mapMutations(['setDrawer', 'toggleDrawer']),\n    onLogout () {\n      this.$store.dispatch('logout')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  h1 {\n    text-align: center;\n  }\n</style>\n"]}]}