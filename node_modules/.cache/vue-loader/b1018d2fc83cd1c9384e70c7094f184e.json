{"remainingRequest":"/Users/werner-dev/www/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/werner-dev/www/frontend/src/components/profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/werner-dev/www/frontend/src/components/profile.vue","mtime":1555246313628},{"path":"/Users/werner-dev/www/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1555006869626},{"path":"/Users/werner-dev/www/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/werner-dev/www/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1555006869626},{"path":"/Users/werner-dev/www/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  var service;//google stuff\n  var map;//google stuff\n  var infowindow;//google stuff\n\tvar addrOG = '';//Array of company addresses\n\tvar shoppingItems;//All the places returned by google nearby search\n  var companyNameOG = [];//Array of company names\n  var radius = 2000;\n\t//Dummy value that is populayed by all the places returned by nearby seqarch\n  var shoppingItemsOG= [{\n          name: 'Chop Shop',\n          lat: '10',\n          long: '10',\n          companyAddr : 'address',\n          hours : 'open'\n\n      }];\n\n\t\t\t/*\n\t\t  callback\n\t\t  results : places returned from google API\n\t\t  It populates the shoppingItemsOG with the places returned by nearby search\n\t\t  */\n  function callback(results, status) {\n    if (status == google.maps.places.PlacesServiceStatus.OK) {\n      shoppingItemsOG.length = 0;\n      companyNameOG.length = 0;\n      for (var i = 0; i < results.length; i++) {\n        var place = results[i];\n        companyNameOG.push(place.name);\n        shoppingItemsOG.push({\n\t        name: place.name,\n\t        lat: place.geometry.location.lat(),\n\t        long: place.geometry.location.lng(),\n\t        companyAddr:place.vicinity,\n\t        hours : place.opening_hours\n      }\n        )\n      }\n    }\n  }\n\nimport { mapGetters } from 'vuex'\n\nexport default {\n    data () {\n      return {\n\t\t\t\tcompanyName : '',\n        mapName: this.name + \"-map\",\n        dialog: false,\n        hashtags: [\n          'Programming',\n          'Design',\n          'Vue',\n          'Vuetify'\n        ],\n        firstname: '',\n        lastname: '',\n        bio: '',\n        age: '',\n        imageUrl: 'g',\n        long: '',\n        lat: '',\n        address:'',\n\t\t\t\tcompanyAddr:addrOG,\n        shoppingItems: companyNameOG\n      }\n    },\n    methods: {\n      onCreateHairdresser () {\n        console.log('hit action');\n        const hairdresserData = {\n          firstname: this.firstname,\n          lastname: this.lastname,\n          bio: this.bio,\n          age: this.age,\n          imageUrl: this.imageUrl,\n\t\t\t\t\tcompanyName:this.companyName,\n\t        companyAddr:addrOG,\n\t\t\t\t\tcompanyLat : this.lat,\n\t\t\t\t\tcompanyLong: this.long,\n\t\t\t\t  hashtags : this.hashtags\n        }\n        this.$store.dispatch('createHairdresserProfile', hairdresserData)\n        this.$router.push('/dashboard')\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'user',\n        'error',\n        'loading'\n      ])\n    },\n    mounted: function() {\n        this.autocomplete = new google.maps.places.Autocomplete(\n            (this.$refs.autocomplete), {\n                types: ['geocode']\n            }\n        );\n        this.autocomplete.addListener('place_changed', () => {\n            let place = this.autocomplete.getPlace();//place selected\n            let ac = place.address_components;\n            var address = ' ';\n\n\t\t\t\t\t\t//The address of the selected location is formatted into a more\n\t\t\t\t\t\t// readable format\n            if (place.address_components) {\n                address = [\n                    (place.address_components[0] && place.address_components[0].long_name || ''),\n                    (place.address_components[1] && place.address_components[1].short_name || ''),\n                    (place.address_components[2] && place.address_components[2].short_name || '')\n                ].join(' ');\n            }\n\n\t\t\t\t\t\taddrOG = address;\n            this.lat = place.geometry.location.lat();\n            this.long = place.geometry.location.lng();\n            // this.markerCoordinates.latitude = this.lat;\n            // this.markerCoordinates.longitude = this.long;\n            this.address = address;\n            var latLong =  new google.maps.LatLng(this.lat,this.long);\n            const element = document.getElementById(this.mapName)\n            const options = {\n                zoom: 14,\n                center: latLong\n            }\n\t\t\t\t\t\t//map is created\n            map = new google.maps.Map(element, options);\n\t\t\t\t\t\t//request used to search for all nearby hairdresser\n            var request = {\n             location: latLong,\n             radius: 5000,\n             type: ['hair_care']\n           };\n\n           infowindow = new google.maps.InfoWindow();\n           service = new google.maps.places.PlacesService(map);\n           service.nearbySearch(request, callback);//request made to API\n      });\n\n    },\n    watch: {\n      user (value) {\n        if (value !== null && value !== undefined) {\n          this.$router.push('profile')\n        }\n      }\n    },\n  }\n\n",{"version":3,"sources":["profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"profile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<v-app id=\"inspire\">\n\t\t<v-toolbar color=\"indigo\" dark fixed app>\n\t\t\t<v-toolbar-title>topnot</v-toolbar-title>\n\t\t</v-toolbar>\n\t\t<v-content>\n      <v-parallax\n    height=\"300\"\n    src=\"https://cdn.vuetifyjs.com/images/parallax/material2.jpg\"\n  ></v-parallax>\n\n\t\t\t<v-layout row justify-center>\n      <v-flex xs6 sm4>\n    <v-img\n    height=\"300\"\n    width = \"300\"\n      src=\"https://cdn.vuetifyjs.com/images/parallax/material2.jpg\"\n    ></v-img>\n  </v-flex>\n\t\t\t\t<v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n\t\t\t\t\t<v-btn slot=\"activator\" color=\"primary\" dark>Edit Profile</v-btn>\n\t\t\t\t\t<v-card>\n\t\t\t\t\t\t<v-form ref=\"form\" @submit.prevent=\"onCreateHairdresser\">\n\t\t\t\t\t\t<v-card-title>\n\t\t\t\t\t\t\t<span class=\"headline\">User Profile</span>\n\t\t\t\t\t\t</v-card-title>\n\n\t\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t\t<v-container grid-list-md>\n\n\t\t\t\t\t\t\t\t<v-layout wrap>\n\t\t\t\t\t\t\t\t\t<v-flex xs12 sm6>\n\t\t\t\t\t\t\t\t\t\t<v-text-field\n                       name=\"firstname\"\n                       label=\"First name\"\n                       v-model=\"firstname\"\n                       id=\"firstname\"\n                       color=\"purple darken-2\"\n                       required\n                     ></v-text-field>\n\t\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t\t<v-flex xs12 sm6>\n\t\t\t\t\t\t\t\t\t\t<v-text-field\n                       name=\"lastname\"\n                       label=\"Last name\"\n                       v-model=\"lastname\"\n                       color=\"blue darken-2\"\n                       required\n                     ></v-text-field>\n\t\t\t\t\t\t\t\t\t</v-flex>\n\n\t\t\t\t\t\t\t\t\t<v-flex xs12 >\n\t\t\t\t\t\t\t\t\t\t<v-slider\n                       v-model=\"age\"\n                       color=\"orange\"\n                       label=\"Age\"\n                       hint=\"Be honest\"\n                       min=\"1\"\n                       max=\"100\"\n                       thumb-label\n                     ></v-slider>\n\t\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t\t<v-flex xs12>\n\t\t\t\t\t\t\t\t\t\t<div slot=\"label\">\n                       Chips\n                     </div>\n\t\t\t\t\t\t\t\t\t\t<v-combobox\n                  v-model=\"hashtags\"\n                  :items=\"hashtags\"\n                  label=\"Select your tags\"\n                  multiple\n                  chips\n                ></v-combobox>\n\t\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t\t<v-flex xs12>\n\t\t\t\t\t\t\t\t\t\t<v-textarea\n                       v-model=\"bio\"\n                       color=\"teal\"\n                     >\n\t\t\t\t\t\t\t\t\t\t\t<div slot=\"label\">\n                         Bio\n\t\t\t\t\t\t\t\t\t\t\t\t<small>(optional)</small>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</v-textarea>\n\t\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t\t<v-flex xs12>\n\t\t\t\t\t\t\t\t\t\t<div >\n                      <v-subheader class=\"pa-0\">Business Address</v-subheader>\n\t\t\t\t\t\t\t\t\t\t\t<input\n                          v-model=\"address\"\n                          ref=\"autocomplete\"\n                          placeholder=\" Enter your location\"\n                          class=\"search-location\"\n                          onfocus=\"value = ''\"\n                          type=\"text\"\n                          label = 'address'\n                          />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t\t<v-flex xs12>\n                    <v-subheader class=\"pa-0\">Company</v-subheader>\n                     <v-autocomplete\n                       v-model=\"companyName\"\n                       :items=\"shoppingItems\"\n                       prepend-icon=\"mdi-city\"\n                     >\n                       <v-slide-x-reverse-transition\n                         slot=\"append-outer\"\n                         mode=\"out-in\"\n                       >\n                     </v-slide-x-reverse-transition>\n                   </v-autocomplete>\n\t\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t</v-layout>\n\t\t\t\t\t\t\t</v-container>\n\t\t\t\t\t\t\t<small>*indicates required field</small>\n\t\t\t\t\t\t</v-card-text>\n\t\t\t\t\t\t<v-card-actions>\n\t\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t\t<v-btn color=\"blue darken-1\" flat @click=\"dialog = false\">Change Password</v-btn>\n\t\t\t\t\t\t\t<v-btn color=\"blue darken-1\" flat @click=\"dialog = false\">Close</v-btn>\n\t\t\t\t\t\t\t<v-btn color=\"blue darken-1\" flat @click=\"dialog = false\" type=\"submit\">Save</v-btn>\n\t\t\t\t\t\t</v-card-actions>\n\t\t\t\t\t</v-form>\n\n\t\t\t\t\t</v-card>\n\t\t\t\t</v-dialog>\n\t\t\t</v-layout>\n\t\t\t<v-card flat>\n\n\t\t\t</v-card>\n\n\t\t\t<div class=\"google-map\" :id=\"mapName\"></div>\n\t\t</v-content>\n\t\t<v-footer color=\"indigo\" app></v-footer>\n\t</v-app>\n</template>\n<script>\n  var service;//google stuff\n  var map;//google stuff\n  var infowindow;//google stuff\n\tvar addrOG = '';//Array of company addresses\n\tvar shoppingItems;//All the places returned by google nearby search\n  var companyNameOG = [];//Array of company names\n  var radius = 2000;\n\t//Dummy value that is populayed by all the places returned by nearby seqarch\n  var shoppingItemsOG= [{\n          name: 'Chop Shop',\n          lat: '10',\n          long: '10',\n          companyAddr : 'address',\n          hours : 'open'\n\n      }];\n\n\t\t\t/*\n\t\t  callback\n\t\t  results : places returned from google API\n\t\t  It populates the shoppingItemsOG with the places returned by nearby search\n\t\t  */\n  function callback(results, status) {\n    if (status == google.maps.places.PlacesServiceStatus.OK) {\n      shoppingItemsOG.length = 0;\n      companyNameOG.length = 0;\n      for (var i = 0; i < results.length; i++) {\n        var place = results[i];\n        companyNameOG.push(place.name);\n        shoppingItemsOG.push({\n\t        name: place.name,\n\t        lat: place.geometry.location.lat(),\n\t        long: place.geometry.location.lng(),\n\t        companyAddr:place.vicinity,\n\t        hours : place.opening_hours\n      }\n        )\n      }\n    }\n  }\n\nimport { mapGetters } from 'vuex'\n\nexport default {\n    data () {\n      return {\n\t\t\t\tcompanyName : '',\n        mapName: this.name + \"-map\",\n        dialog: false,\n        hashtags: [\n          'Programming',\n          'Design',\n          'Vue',\n          'Vuetify'\n        ],\n        firstname: '',\n        lastname: '',\n        bio: '',\n        age: '',\n        imageUrl: 'g',\n        long: '',\n        lat: '',\n        address:'',\n\t\t\t\tcompanyAddr:addrOG,\n        shoppingItems: companyNameOG\n      }\n    },\n    methods: {\n      onCreateHairdresser () {\n        console.log('hit action');\n        const hairdresserData = {\n          firstname: this.firstname,\n          lastname: this.lastname,\n          bio: this.bio,\n          age: this.age,\n          imageUrl: this.imageUrl,\n\t\t\t\t\tcompanyName:this.companyName,\n\t        companyAddr:addrOG,\n\t\t\t\t\tcompanyLat : this.lat,\n\t\t\t\t\tcompanyLong: this.long,\n\t\t\t\t  hashtags : this.hashtags\n        }\n        this.$store.dispatch('createHairdresserProfile', hairdresserData)\n        this.$router.push('/dashboard')\n      }\n    },\n    computed: {\n      ...mapGetters([\n        'user',\n        'error',\n        'loading'\n      ])\n    },\n    mounted: function() {\n        this.autocomplete = new google.maps.places.Autocomplete(\n            (this.$refs.autocomplete), {\n                types: ['geocode']\n            }\n        );\n        this.autocomplete.addListener('place_changed', () => {\n            let place = this.autocomplete.getPlace();//place selected\n            let ac = place.address_components;\n            var address = ' ';\n\n\t\t\t\t\t\t//The address of the selected location is formatted into a more\n\t\t\t\t\t\t// readable format\n            if (place.address_components) {\n                address = [\n                    (place.address_components[0] && place.address_components[0].long_name || ''),\n                    (place.address_components[1] && place.address_components[1].short_name || ''),\n                    (place.address_components[2] && place.address_components[2].short_name || '')\n                ].join(' ');\n            }\n\n\t\t\t\t\t\taddrOG = address;\n            this.lat = place.geometry.location.lat();\n            this.long = place.geometry.location.lng();\n            // this.markerCoordinates.latitude = this.lat;\n            // this.markerCoordinates.longitude = this.long;\n            this.address = address;\n            var latLong =  new google.maps.LatLng(this.lat,this.long);\n            const element = document.getElementById(this.mapName)\n            const options = {\n                zoom: 14,\n                center: latLong\n            }\n\t\t\t\t\t\t//map is created\n            map = new google.maps.Map(element, options);\n\t\t\t\t\t\t//request used to search for all nearby hairdresser\n            var request = {\n             location: latLong,\n             radius: 5000,\n             type: ['hair_care']\n           };\n\n           infowindow = new google.maps.InfoWindow();\n           service = new google.maps.places.PlacesService(map);\n           service.nearbySearch(request, callback);//request made to API\n      });\n\n    },\n    watch: {\n      user (value) {\n        if (value !== null && value !== undefined) {\n          this.$router.push('profile')\n        }\n      }\n    },\n  }\n\n</script>\n<style lang=\"scss\" scoped>\n  h1 {\n    text-align: center;\n  }\n</style>\n"]}]}