{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/toolbar.vue","mtime":1554640691000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\n\n// Utilities\nimport {\n  mapMutations\n} from 'vuex'\n\nexport default {\n  // data: () => ({\n  //   drawer: null\n  // }),\n  props: {\n    source: String\n  },\n  computed: {\n    userIsAuthenticated () {\n      return this.$store.getters.user !== null && this.$store.getters.user !== undefined\n    }\n  },\n  methods: {\n    //...mapMutations(['setDrawer', 'toggleDrawer']),\n    ...mapMutations(['setDrawer', 'toggleDrawer']),\n    onClickBtn () {\n      this.setDrawer(!this.$store.state.sidebar)\n    },\n    onClick () {\n      //\n    },\n    onLogout () {\n      this.$store.dispatch('logout')\n    }\n  }\n}\n",{"version":3,"sources":["toolbar.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"toolbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-toolbar color=\"indigo\" dark fixed app>\n      <v-toolbar-side-icon @click.stop=\"onClickBtn\"><v-icon>menu</v-icon></v-toolbar-side-icon>\n      <v-toolbar-title>topnot</v-toolbar-title>\n    </v-toolbar>\n</template>\n\n<script>\n\n// Utilities\nimport {\n  mapMutations\n} from 'vuex'\n\nexport default {\n  // data: () => ({\n  //   drawer: null\n  // }),\n  props: {\n    source: String\n  },\n  computed: {\n    userIsAuthenticated () {\n      return this.$store.getters.user !== null && this.$store.getters.user !== undefined\n    }\n  },\n  methods: {\n    //...mapMutations(['setDrawer', 'toggleDrawer']),\n    ...mapMutations(['setDrawer', 'toggleDrawer']),\n    onClickBtn () {\n      this.setDrawer(!this.$store.state.sidebar)\n    },\n    onClick () {\n      //\n    },\n    onLogout () {\n      this.$store.dispatch('logout')\n    }\n  }\n}\n</script>\nclick.stop=\"onClickBtn\"\n<style lang=\"scss\" scoped>\n  h1 {\n    text-align: center;\n  }\n</style>\n"]}]}