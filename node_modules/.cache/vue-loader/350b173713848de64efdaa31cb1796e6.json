{"remainingRequest":"/Users/werner-dev/www/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/werner-dev/www/frontend/src/components/knitterfinder.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/werner-dev/www/frontend/src/components/knitterfinder.vue","mtime":1555224202124},{"path":"/Users/werner-dev/www/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/werner-dev/www/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/werner-dev/www/frontend/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/werner-dev/www/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1555006869626},{"path":"/Users/werner-dev/www/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.google-map {\n  width: 800px;\n  height: 600px;\n  margin: 0 auto;\n  background: gray;}\n\n*, *::after, *::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\n\n\n.search-location {\n  display: block;\n  width: 60vw;\n  margin: 0 auto;\n  margin-top: 5vw;\n  font-size: 20px;\n  font-weight: 400;\n  outline: none;\n  height: 30px;\n  line-height: 30px;\n  text-align: center;\n  border-radius: 10px;\n}\n",{"version":3,"sources":["knitterfinder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmYA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"knitterfinder.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<v-app light>\n\t\t<v-toolbar class=\"white\">\n\t\t\t<v-icon>change_history</v-icon>\n\t\t\t<v-toolbar-title v-text=\"title\"></v-toolbar-title>\n\t\t</v-toolbar>\n\t\t<v-content>\n\t\t\t<section>\n\t\t\t\t<v-card class=\"elevation-12\">\n\t\t\t\t\t<v-toolbar dark color=\"primary\">\n\t\t\t\t\t\t<v-toolbar-title>Find your Knitter</v-toolbar-title>\n\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t</v-toolbar>\n\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t<v-form  @submit.prevent=\"onLocate($data)\" >\n\t\t\t\t\t\t\t<span class=\"group pa-1\">\n\t\t\t\t\t\t\t\t<v-icon>room</v-icon>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t<input\n                   v-model=\"address\"\n                   ref=\"autocomplete\"\n                   placeholder=\" Enter your location\"\n                   class=\"search-location\"\n                   onfocus=\"value = ''\"\n                   type=\"text\"\n                   label = 'address'\n                   />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<v-card-actions>\n\t\t\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t\t\t<v-btn type=\"submit\" color=\"accent\" >\n                    Locate\n\n\t\t\t\t\t\t\t\t\t<span slot=\"loader\" class=\"custom-loader\">\n\t\t\t\t\t\t\t\t\t\t<v-icon light>cached</v-icon>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t</v-card-actions>\n\t\t\t\t\t\t</v-form>\n\t\t\t\t\t</v-card-text>\n\t\t\t\t</v-card>\n\t\t\t</section>\n\t\t\t<br/>\n\n\t\t\t<section>\n<!--\n Display all Nearby hairdresser that is in our DB\n-->\n\t\t\tAll my HairDressers be like\n\t\t\t<v-layout row wrap v-for=\"hairdresser in nearbyHairdressers\" :key=\"hairdresser.creatorId\" class=\"mb-2\">\n      <v-flex xs12 sm10 md8 offset-sm1 offset-md2>\n        <v-card class=\"info\">\n          <v-container fluid>\n            <v-layout row>\n              <v-flex xs7 sm8 md9>\n                <v-card-title primary-title>\n                  <div>\n                    <h5 class=\"white--text mb-0\">{{ hairdresser.firstname }}</h5>\n\t\t\t\t\t\t\t\t\t\t<h5 class=\"white--text mb-0\">{{ hairdresser.lastname }}</h5>\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"white--text mb-0\">{{ hairdresser.companyName }}</h3>\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"white--text mb-0\">{{ hairdresser.companyAddr }}</h3>\n\t\t\t\t\t\t\t\t\t\t<h5 class=\"white--text mb-0\">{{ hairdresser.companyLat }}</h5>\n\t\t\t\t\t\t\t\t\t\t<h5 class=\"white--text mb-0\">{{ hairdresser.companyLong }}</h5>\n\t\t\t\t\t\t\t\t\t\t<h5 class=\"white--text mb-2\">{{ hairdresser.hashtags }}</h5>\n\t\t\t\t\t\t\t\t\t\t<h5 class=\"white--text mb-0\">{{ hairdresser.age }}</h5>\n\t\t\t\t\t\t\t\t\t\t<h5 class=\"white--text mb-2\">{{ lat }}</h5>\n\n                  </div>\n                </v-card-title>\n                <v-card-actions>\n                </v-card-actions>\n              </v-flex>\n            </v-layout>\n          </v-container>\n        </v-card>\n      </v-flex>\n    </v-layout>\n\t</section>\n\n\n\t<!--\n\t Display all hair_care places returned by google api\n\t-->\n\n      <div id = 'cardsAndMap' style=\"visibility: hidden\">\n\t\t\t<v-flex xs12  offset v-for=\"item in shoppingItems\">\n\t\t\t\t<br/>\n\t\t\t\t<v-card >\n\t\t\t\t\t<v-card-title primary-title >\n\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<h3 > {{ item.name }} </h3>\n              <h5> {{ item.lat }} </h5>\n              <h5> {{ item.long }} </h5>\n              <h5> {{ item.companyAddr }} </h5>\n              <h5> {{ item.hours }} </h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</v-card-title>\n\t\t\t\t\t<v-card-actions>\n\t\t\t\t\t\t<v-btn flat color=\"orange\">Hallor At Me</v-btn>\n\t\t\t\t\t\t<v-btn flat color=\"orange\">Scope Location</v-btn>\n\t\t\t\t\t</v-card-actions>\n\t\t\t\t</v-card>\n\t\t\t</v-flex>\n\t\t\t<div class=\"google-map\" :id=\"mapName\"></div>\n      </div>\n\t\t</v-content>\n\t</v-app>\n</template>\n\n\n<script>\n\tvar x ;\n var service;//google stuff\n var shoppingItems;\n var map;//google stuff\n var infowindow;//google stuff\n var radius = 5000;\n\n //Dummy value is replaced by all Nearby hairdressers\n var nearbyHairdressersOG = [] ;\n\n //Dummy values that is replaced by places that Google Nearby Search returned\n var shoppingItemsOG= [{\n         name: 'Chop Shop',\n         lat: '10',\n         long: '10',\n         companyAddr : 'address',\n         hours : 'open'\n\n     },\n     {\n         name: 'Partners',\n         lat: '12',\n         long: '10',\n         companyAddr : 'address',\n         hours : 'open'\n     },\n     {\n         name: 'Fuck You Barbers',\n         lat: '10',\n         long: '10',\n         companyAddr : 'address',\n         hours : 'open'\n     },\n     {\n         name: 'PoesKlap Haarkappers',\n         lat: '12',\n         long: '10',\n         companyAddr : 'address',\n         hours : 'open'\n     },\n     {\n         name: 'God Se Knitter',\n         lat: '10',\n         long: '10',\n         companyAddr : 'address',\n         hours : 'open'\n     },\n     {\n         name: 'Satan Se Balhaar-Kapper',\n         lat: '12',\n         long: '10',\n         companyAddr : 'address',\n         hours : 'open'\n     }\n ];\n\n\n\n /*\n callback\n results : places returned from google API\n It populates the nearbyHairdressers if the corresponding hairdresser\n ( that is returned by Google API) is present in our DB\n It also calls createMarker for each place in results\n */\n  function callback(results, status) {\n \t if (status == google.maps.places.PlacesServiceStatus.OK) {\n\t\t //empty both arrays before populating\n \t\t shoppingItemsOG.length = 0;\n \t\t nearbyHairdressersOG.length = 0;\n \t\t for (var i = 0; i < results.length; i++) {\n \t\t\t var place = results[i];\n \t\t\t if(x != null){//if x is not empty\n \t\t\t\t for (var j = 0; j < x.length; j++) {\n\t\t\t\t\t //checks if place ( google place) matches x ( heairdresser form DB) by name\n \t\t\t\t\t if(x[j].companyName == place.name){\n \t\t\t\t\t\tnearbyHairdressersOG.push({\n \t\t\t\t\t\t\tfirstname: x[j].firstname,\n \t\t\t\t\t\t\tlastname: x[j].lastname,\n \t\t\t\t\t\t\tcompanyName: x[j].companyName,\n \t\t\t\t\t\t\tcompanyAddr: x[j].companyAddr,\n \t\t\t\t\t\t\tcompanyLat: x[j].companyLat,\n \t\t\t\t\t\t\tcompanyLong: x[j].companyLong,\n \t\t\t\t\t\t\thashtags: x[j].hashtags,\n \t\t\t\t\t\t\tage: x[j].age\n \t\t\t\t\t})\n \t\t\t\t\t alert(x[j].firstname);\n \t\t\t\t }\n \t\t\t\t }\n \t\t\t }\n \t\t\t createMarker(results[i]);\n \t\t }\n\n \t }\n  }\n  /*\n arePointsNear\n This function takes 2 sets of coordinates and a radius\n It computes whether the points are inside the radius\n Is called in methods\n  */\n  function arePointsNear(checkPoint, centerPoint, km) {\n \t var ky = 40000 / 360;\n \t var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\n \t var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\n \t var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n \t return Math.sqrt(dx * dx + dy * dy) <= km;\n  }\n\n\n  /*\n  createMarker\n  place : a single place from google api\n  It creates a marker to be placed on the map.\n  It also populates shoppingItems ..... shopping itmes is used to store and display\n  the places google's api returns....testing purposes\n  */\n  function createMarker(place) {\n \t\t\t var placeLoc = place.geometry.location;\n \t\t\t var marker = new google.maps.Marker({\n \t\t\t\t map: map,\n \t\t\t\t position: place.geometry.location\n \t\t\t });\n \t\t\t\t shoppingItemsOG.push({  name: place.name,\n \t\t\t\t lat: place.geometry.location.lat(),\n \t\t\t\t long: place.geometry.location.lng(),\n \t\t\t\t companyAddr:place.vicinity,\n \t\t\t\t hours : place.opening_hours\n \t\t\t }\n \t\t\t\t )\n \t\t\t google.maps.event.addListener(marker, 'click', function() {\n \t\t\t\t infowindow.setContent(place.name);\n \t\t\t\t infowindow.open(map, this);\n \t\t\t });\n \t\t }\n\n\n\n\n\n\nimport {\n        mapActions\n    } from 'vuex'\nimport {\n    mapGetters\n} from 'vuex'\n\nexport default {\n    name: 'google-map',\n    props: ['name'],\n    data: function() {\n        return {\n            title: 'topnot',\n\t\t\t\t\t\tmapName: this.name + \"-map\",\n            markerCoordinates: [{\n              latitude: 51.501527,\n              longitude: -0.1921837\n            }],\n            address: '',//of the current user\n            long: '',// of the current user\n            lat: '',//of the current user\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tVariable to store all nearby hairdresser ( places that is both in our\n\t\t\t\t\t\tDB as well as returned in the nearby places search)\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tnearbyHairdressers :nearbyHairdressersOG,\n            shoppingItems: shoppingItemsOG,//All the places that Google Nearby Search returned\n\t\t\t\t\t\thairdessers: [],//Supposed to be all the hairdresssers in our DB... but only works sometimes\n            }\n    },\n    computed: {\n        ...mapGetters([\n            'address'\n        ]),\n\n\t\t\t\t/* Is supposed to call loadedHairDresser in users.js and return the\n\t\t\t\tlist of hairdressers in the DB\n\n\t\t\t\tSomething is wrong regarding the timing of this. It is sometimes called\n\t\t\t\ttoo late and the x variable is empty when x is called in a function above.\n\n\t\t\t\tEDIT : This method does not have to be here. I added this to mounted under\n\t\t\t\tthe .autocomplete.addListener and it seems to work.\n\t\t\t\t*/\n\t\t\t\thairdressers () {\n\n\t\t\t\t return x = this.$store.getters.loadedHairdressers;\n\n      }\n    },\n    methods: {\n        ...mapActions({\n\n            onLocate: 'locate'\n\n        })\n    },\n\n    mounted: function() {\n\t\t\t//Calls loadedHairdressers directly...also unsrue about the placing of this\n\t\t\tthis.$store.dispatch('loadHairdressers');\n\n\n\n//API call to allow autocompletion\n        this.autocomplete = new google.maps.places.Autocomplete(\n            (this.$refs.autocomplete), {\n                types: ['geocode']\n            }\n        );\n/*\nAllows to select a place that is returned by autocomplete. Get the address/lat/long\nof the selected location. It calls callBack() as well as creates/up[dates] the map.\nit is also used to return all nearby hairdressers\n*/\n        this.autocomplete.addListener('place_changed', () => {\n\n\t\t\t\t\tx = this.$store.getters.loadedHairdressers;\n\t\t\t\t\talert(x.length);\n\n            let place = this.autocomplete.getPlace();//place selected\n            let ac = place.address_components;\n            var address = ' ';\n\n\t\t\t\t\t\t//The address of the selected location is formatted into a more\n\t\t\t\t\t\t// readable format\n            if (place.address_components) {\n                address = [\n                    (place.address_components[0] && place.address_components[0].long_name || ''),\n                    (place.address_components[1] && place.address_components[1].short_name || ''),\n                    (place.address_components[2] && place.address_components[2].short_name || '')\n                ].join(' ');\n            }\n\n\t\t\t\t\t\t//Sets variable of the users selected loaction\n            this.lat = place.geometry.location.lat();\n            this.long = place.geometry.location.lng();\n            this.markerCoordinates.latitude = this.lat;\n            this.markerCoordinates.longitude = this.long;\n            this.address = address;\n\n\t\t\t\t\t\t//Map Things\n\t\t\t\t\t\tvar latLong =  new google.maps.LatLng(this.markerCoordinates.latitude,this.markerCoordinates.longitude)\n\t\t\t\t\t\tconst element = document.getElementById(this.mapName)\n            const options = {\n                zoom: 14,\n                center: latLong\n            }\n\n\t\t\t\t\t\tmap = new google.maps.Map(element, options);//map is created\n\t\t\t\t\t\t//request used to search for all nearby hairdresser\n\t\t\t\t\t\tvar request = {\n             location: latLong,\n             radius: radius,\n             type: ['hair_care']\n           };\n\n           infowindow = new google.maps.InfoWindow();\n           service = new google.maps.places.PlacesService(map);\n\t\t\t\t\t //Call to API to return nearby hairdressers\n           service.nearbySearch(request, callback);\n\t\t\t\t\t //Sets the map visible\n           document.getElementById('cardsAndMap').style.visibility = 'visible';\n                  });\n\n    },\n\n\n}\n\n</script>\n\n<style>\n\n.google-map {\n  width: 800px;\n  height: 600px;\n  margin: 0 auto;\n  background: gray;}\n\n*, *::after, *::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\n\n\n.search-location {\n  display: block;\n  width: 60vw;\n  margin: 0 auto;\n  margin-top: 5vw;\n  font-size: 20px;\n  font-weight: 400;\n  outline: none;\n  height: 30px;\n  line-height: 30px;\n  text-align: center;\n  border-radius: 10px;\n}\n</style>\n"]}]}